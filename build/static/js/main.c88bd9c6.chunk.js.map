{"version":3,"sources":["images/header-logo.svg","components/Header.js","components/Register.js","components/Login.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","utils/api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","components/ProtectedRoute.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","loggedIn","className","src","headerLogo","alt","email","onClick","signOut","href","routePath","routePathName","to","Register","React","useState","setEmail","password","setPassword","onSubmit","e","preventDefault","register","name","type","placeholder","required","onChange","evt","target","value","withRouter","CurrentUserContext","createContext","Card","currentUser","useContext","isOwn","card","owner","_id","isLiked","likes","some","i","cardLikeButtonClassName","onCardDelete","aria-label","link","onCardClick","onCardLike","length","Main","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","key","Footer","api","options","this","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","Error","status","fetch","then","_getResponseData","fullName","aboutMe","method","body","JSON","stringify","nameCard","linkToImage","elemId","newAvatar","authorization","PopupWithForm","isOpen","onClose","title","children","buttonText","EditProfilePopup","setName","description","setDescription","useEffect","onUpdateUser","id","minLength","maxLength","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","setLink","ImagePopup","ProtectedRoute","Component","component","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","isCardDeletePopupOpen","setIsCardDeletePopupOpen","setCurrentUser","setCards","closeAllPopups","all","getUserInfo","getInitialCards","user","catch","err","console","log","Provider","path","deleteCard","filter","c","addLike","newCard","newCards","deleteLike","updateAvatar","setUserInfo","item","addNewCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c88bd9c6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header-logo.a307e1c4.svg\";","import React from 'react';\nimport headerLogo from '../images/header-logo.svg';\nimport { Link } from 'react-router-dom';\n\nfunction Header(props) {\n    return (\n       props.loggedIn === true ? (\n            <header className=\"header\">\n                <img className=\"header__logo\" src={headerLogo} alt=\"Лого\" />\n                <div className=\"header__auth\">\n                    <p className=\"header__auth_email\">{props.email}</p>\n                    <button className=\"header__auth_link-exit\" onClick={props.signOut} href={props.routePath}>{props.routePathName}</button>\n                </div>\n            </header>\n        ) : (\n                <header className=\"header\">\n                    <img className=\"header__logo\" src={headerLogo} alt=\"Лого\" />\n                    <div className=\"header__auth\">\n                        <Link to={props.routePath} className=\"header__auth_link\">{props.routePathName}</Link>\n                    </div>\n                </header>\n            )\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Register(props) {\n    const [email, setEmail] = React.useState('')\n    const [password, setPassword] = React.useState('')\n   // const history = useHistory();\n\n    function handleChangeEmail(evt) {\n        setEmail(evt.target.value);\n    }\n\n    function handleChangePassword(evt) {\n        setPassword(evt.target.value);\n    }\n    function handleSubmit(e){\n        e.preventDefault();\n        props.register(email, password)\n    }\n\n    return (\n        <div className=\"register\">\n            <h1 className=\"register__title\">Регистрация</h1>\n            <form onSubmit={handleSubmit} className=\"register__form\">\n                <input name=\"email\" type=\"email\" className=\"register__input\"\n                    placeholder=\"Email\" required onChange={handleChangeEmail} />\n                <input name=\"password\" type=\"password\" className=\"register__input\"\n                    placeholder=\"Пароль\" required onChange={handleChangePassword} />\n                <button type=\"submit\" className=\"register__button-singup\">Зарегистрироваться</button>\n            </form>\n            <div className=\"register__auth\">\n                <p>Уже зарегистрированы?</p>\n                <Link to={'/sign-in'} className=\"register__auth_link\">Войти</Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Register;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction Login(props) {\n    const [email, setEmail] = React.useState('')\n    const [password, setPassword] = React.useState('')\n   // const history = useHistory();\n\n    function handleChangeEmail(evt) {\n        setEmail(evt.target.value);\n    }\n\n    function handleChangePassword(evt) {\n        setPassword(evt.target.value);\n    }\n    function handleSubmit(e){\n        e.preventDefault();\n        props.register(email, password)\n    }\n\n    return (\n        <div className=\"register\">\n            <h1 className=\"register__title\">Вход</h1>\n            <form onSubmit={handleSubmit} className=\"register__form\">\n                <input name=\"email\" type=\"email\" className=\"register__input\"\n                    placeholder=\"Email\" required onChange={handleChangeEmail} />\n                <input name=\"password\" type=\"password\" className=\"register__input\"\n                    placeholder=\"Пароль\" required onChange={handleChangePassword} />\n                <button type=\"submit\" className=\"register__button-singup\">Войти</button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(Login);","import React from 'react';\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n    const isOwn = props.card.owner._id === currentUser._id;\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n    const cardLikeButtonClassName = (`element__button-like ${isLiked ? 'element__button-like_active' : ''}`);\n\n    function handleClick() {\n        props.onCardClick(props.card);\n    }\n    function handleCardDeleteClick() {\n        props.onCardDelete(props.card);\n    }\n    function handleLikeClick() {\n        props.onCardLike(props.card);\n    }\n\n    return (\n        <div className=\"element\">\n            {isOwn ? (<button className=\"element__button-remove transparent\" onClick={handleCardDeleteClick} type=\"button\" aria-label=\"Удалить\"></button>) : ('')}\n            <img src={props.card.link} className=\"element__image\" alt={props.card.name} onClick={handleClick} />\n            <h3 className=\"element__title\">{props.card.name}</h3>\n            <button className={`card__like ${cardLikeButtonClassName} transparent`} onClick={handleLikeClick} type=\"button\" aria-label=\"Нравиться\"></button>\n            <span className=\"element__number-likes\">{props.card.likes.length}</span>\n        </div>\n    )\n}\nexport default Card;","import React from 'react';\n//import api from '../utils/api';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div onClick={props.onEditAvatar} className=\"profile__avatar-edit\" >\n                    <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"Аватар\" />\n                </div>\n                <div className=\"profile__info\">\n                    <div className=\"profile__edit-form\">\n                        <h1 className=\"profile__title\">{currentUser.name}</h1>\n                        <button onClick={props.onEditProfile} className=\"profile__button profile__edit-button transparent\" type=\"button\"\n                            aria-label=\"Редактировать\">\n                        </button>\n                    </div>\n                    <p className=\"profile__subtitle\">{currentUser.about}</p>\n                </div>\n                <button onClick={props.onAddPlace} className=\"profile__button profile__add-button transparent\" type=\"button\" aria-label=\"Добавить\">\n                </button>\n            </section>\n            <section className=\"elements\">\n                {props.cards.map((card) => <Card\n                    card={card}\n                    key={card._id}\n                    onCardClick={props.onCardClick}\n                    onCardDelete={props.onCardDelete}\n                    onCardLike={props.onCardLike}\n                />)}\n            </section>\n        </main>\n    );\n}\n\nexport default Main;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n        </footer>\n    );\n}\n\nexport default Footer;","class Api {\n    constructor(options) {\n        this._baseUrl = options.baseUrl;\n        this._headers = options.headers;\n    }\n    _getResponseData(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(new Error(`Ошибка: ${res.status}`));\n    }\n    getUserInfo() {\n        return fetch(`${this._baseUrl}/users/me`, {\n            headers: this._headers\n        })\n            .then(this._getResponseData)\n    }\n    setUserInfo(fullName, aboutMe) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: fullName,\n                about: aboutMe\n            })\n        })\n            .then(this._getResponseData)\n    }\n    getInitialCards() {\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: this._headers\n        })\n            .then(this._getResponseData)\n    }\n    addNewCard(nameCard, linkToImage) {\n        return fetch(`${this._baseUrl}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: nameCard,\n                link: linkToImage\n            })\n        })\n            .then(this._getResponseData)\n    }\n    deleteCard(elemId) {\n        return fetch(`${this._baseUrl}/cards/${elemId}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n            .then(this._getResponseData)\n    }\n    addLike(elemId) {\n        return fetch(`${this._baseUrl}/cards/likes/${elemId}`, {\n            method: 'PUT',\n            headers: this._headers\n        })\n            .then(this._getResponseData)\n    }\n    deleteLike(elemId) {\n        return fetch(`${this._baseUrl}/cards/likes/${elemId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n            .then(this._getResponseData)\n    }\n    updateAvatar(newAvatar) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: newAvatar\n            })\n        })\n            .then(this._getResponseData)\n    }\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n    headers: {\n        authorization: 'b1f35061-c301-414a-92c3-da1eeb67e987',\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default api","import React from 'react';\n\nfunction PopupWithForm(props) {\n    return (\n        <section className={`popup popup_${props.name} ${props.isOpen ? 'popup_opened' : ''}`}>\n            <div className=\"popup__container\">\n                <form className=\"popup__form\" name={props.name} onSubmit={props.onSubmit}>\n                    <button className=\"popup__close-icon transparent\" onClick={props.onClose} type=\"button\" aria-label=\"Закрыть\">\n                    </button>\n                    <h2 className=\"popup__title\">{props.title}</h2>\n\n                    {props.children}\n\n                    <button type=\"submit\" className=\"popup__button-save\">{props.buttonText}</button>\n                </form>\n            </div>\n        </section>\n    )\n}\nexport default PopupWithForm;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nfunction EditProfilePopup(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    function handleChangeName(evt) {\n        setName(evt.target.value);\n    }\n    function handleChangeDescription(evt) {\n        setDescription(evt.target.value);\n    }\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateUser({\n            name,\n            about: description,\n        });\n    }\n    return (\n        <PopupWithForm name=\"profile\" title=\"Редактировать профиль\" buttonText=\"Сохранить\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}>\n            <div className=\"popup__field\">\n                <input name=\"full_name\" type=\"text\" id=\"name-input\" className=\"popup__input popup__input_name\"\n                    placeholder=\"Имя\" required minLength=\"2\" maxLength=\"40\" value={name} onChange={handleChangeName} />\n                <span className=\"popup__input-error\" id=\"name-input-error\"></span>\n            </div>\n            <div className=\"popup__field\">\n                <input name=\"about_me\" type=\"text\" id=\"about-me-input\"\n                    className=\"popup__input popup__input_about-me\"\n                    placeholder=\"О себе\" required minLength=\"2\" maxLength=\"200\" value={description} onChange={handleChangeDescription} />\n                <span className=\"popup__input-error\" id=\"about-me-input-error\"></span>\n            </div>\n        </PopupWithForm>\n    )\n}\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup(props) {\n    const avatarRef = React.useRef('');\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateAvatar({\n            avatar: avatarRef.current.value,\n        });\n    }\n\n    return (\n        <PopupWithForm name=\"update-avatar\" title=\"Обновить аватар\" buttonText=\"Сохранить\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}>\n            <div className=\"popup__field\">\n                <input name=\"link_to_avatar\" type=\"url\" id=\"link-input\" ref={avatarRef}\n                    className=\"popup__input popup__input_link-to-avatar\" placeholder=\"Ссылка на новый аватар\"\n                    required />\n                <span className=\"popup__input-error\" id=\"link-input-error\"></span>\n            </div>\n\n        </PopupWithForm>\n    )\n}\nexport default EditAvatarPopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup(props) {\n    const [name, setName] = React.useState('');\n    const [link, setLink] = React.useState('');\n\n    function handleChangeName(evt) {\n        setName(evt.target.value);\n    }\n    function handleChangeLink(evt) {\n        setLink(evt.target.value);\n    }\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onAddPlace({\n            name,\n            link,\n        })\n    }\n\n    return (\n        <PopupWithForm name=\"card\" title=\"Новое место\" buttonText=\"Создать\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}>\n            <div className=\"popup__field\">\n                <input name=\"name_card\" type=\"text\" id=\"card-input\"\n                    className=\"popup__input popup__input_name-card\" placeholder=\"Название\" required\n                    minLength=\"1\" maxLength=\"30\" value={name} onChange={handleChangeName} />\n                <span className=\"popup__input-error\" id=\"card-input-error\"></span>\n            </div>\n            <div className=\"popup__field\">\n                <input name=\"link_to_image\" type=\"url\" id=\"link-input\"\n                    className=\"popup__input popup__input_link-to-image\" placeholder=\"Ссылка на картинку\"\n                    required value={link} onChange={handleChangeLink} />\n                <span className=\"popup__input-error\" id=\"link-input-error\"></span>\n            </div>\n        </PopupWithForm>\n    )\n}\nexport default AddPlacePopup;","import React from 'react';\n\nfunction ImagePopup(props) {\n    if (!props.card) { return false }\n    else {\n        return (\n            <section className=\"popup popup_images popup_opened\">\n                <figure className=\"popup__container-image\">\n                    <button className=\"popup__close-icon popup__close-image transparent\" onClick={props.onClose} type=\"button\" aria-label=\"Закрыть\">\n                    </button>\n                    <img src={props.card.link} className=\"popup__preview\" alt={props.card.name} />\n                    <figcaption className=\"popup__title-image\">{props.card.name}</figcaption>\n                </figure>\n            </section>\n        )\n    }\n}\nexport default ImagePopup;","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...props  }) => {\n  return (\n    <Route>\n      {\n        () => props.loggedIn === true ? <Component {...props} /> : <Redirect to=\"./sign-in\" />\n      }\n    </Route>\n)}\n\nexport default ProtectedRoute;","import React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport Header from './Header'\nimport Register from './Register.js';\nimport Login from './Login.js';\nimport Main from './Main'\nimport Footer from './Footer'\nimport api from '../utils/api'\nimport PopupWithForm from './PopupWithForm';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport ProtectedRoute from './ProtectedRoute';\nimport '../App.css';\n\n\nfunction App() {\n    const [loggedIn, setLoggedIn] = React.useState(false);\n    const [email, setEmail] = React.useState('');\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState(false);\n    const [isCardDeletePopupOpen, setIsCardDeletePopupOpen] = React.useState(false);\n    const [currentUser, setCurrentUser] = React.useState({ name: '', about: '', avatar: '' });\n    const [cards, setCards] = React.useState([])\n\n    const handleEditAvatarClick = () => { setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen); }\n    const handleEditProfileClick = () => { setIsEditProfilePopupOpen(!isEditProfilePopupOpen); }\n    const handleAddPlaceClick = () => { setIsAddPlacePopupOpen(!isAddPlacePopupOpen); }\n    const handleCardClick = (card) => { setSelectedCard(card); }\n    const handleCardDeleteClick = (card) => {\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards(cards.filter((c) => c._id !== card._id));\n            })\n            .catch((err) => { console.log(err); });\n    }\n    const handleCardLike = (card) => {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        if (!isLiked)\n            api.addLike(card._id)\n                .then((newCard) => {\n                    const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n                    setCards(newCards);\n                });\n        if (isLiked)\n            api.deleteLike(card._id)\n                .then((newCard) => {\n                    const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n                    setCards(newCards);\n                });\n    }\n    const handleUpdateUser = (user) => {\n        api.setUserInfo(user.name, user.about)\n            .then((user) => {\n                setCurrentUser({\n                    ...currentUser,\n                    name: user.name,\n                    about: user.about,\n                })\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n    const handleUpdateAvatar = (user) => {\n        api.updateAvatar(user.avatar)\n            .then((user) => {\n                setCurrentUser({\n                    ...currentUser,\n                    avatar: user.avatar,\n                })\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n    const handleAddPlaceSubmit = (item) => {\n        api.addNewCard(item.name, item.link)\n            .then((newCard) => {\n                setCards(\n                    [newCard, ...cards]\n                );\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n    const closeAllPopups = () => {\n        setIsEditAvatarPopupOpen(false)\n        setIsEditProfilePopupOpen(false)\n        setIsAddPlacePopupOpen(false)\n        setSelectedCard(false)\n        setIsCardDeletePopupOpen(false)\n    }\n    React.useEffect(() => {\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\n            .then(([user, res]) => {\n                setCurrentUser(user);\n                setCards(res)\n\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }, [])\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"page\">\n            \n                <Switch>\n                    <Route path=\"/sign-up\">\n                        <Header routePathName={'Войти'} routePath={'/sign-in'} />\n                        <Register/>\n                    </Route>\n                    <Route path=\"/sign-in\">\n                        <Header routePathName={'Регистрация'} routePath={'/sign-up'} />\n                        <Login/>\n                    </Route>\n                    <ProtectedRoute path=\"/\" loggedIn={loggedIn} component={Main}\n                        onEditAvatar={handleEditAvatarClick}\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        cards={cards}\n                        onCardClick={handleCardClick}\n                        onCardDelete={handleCardDeleteClick}\n                        onCardLike={handleCardLike} />\n                </Switch>\n\n                <Route>\n                    {loggedIn === true ? <Redirect to='/sign-in' /> : <Redirect to='/' />}\n                </Route>\n                <Route path=\"*\">\n                    <Redirect to='/sign-in' />\n                </Route>\n\n                {/* <Main\n                    onEditAvatar={handleEditAvatarClick}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    cards={cards}\n                    onCardClick={handleCardClick}\n                    onCardDelete={handleCardDeleteClick}\n                    onCardLike={handleCardLike}\n                /> */}\n                <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n                <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n                <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n                <PopupWithForm name=\"remove-card\" title=\"Вы уверены?\" buttonText=\"Да\" isOpen={isCardDeletePopupOpen} onClose={closeAllPopups}\n                />\n                <ImagePopup name=\"images\" card={selectedCard} onClose={closeAllPopups} />\n                <Footer />\n            </div>\n        </CurrentUserContext.Provider>\n    );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}